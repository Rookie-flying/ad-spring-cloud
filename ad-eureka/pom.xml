<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hx-ad</artifactId>
        <groupId>com.hx.ad</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <!-- 当前项目/模块的坐标, groupId从父模块中继承 -->
    <artifactId>ad-eureka</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

<!--netflix开源的一款，服务注册和服务发现的产品，采用c/s架构，通过定位服务，
解决中间服务器的负载均衡和故障转移。eureka-server作为服务注册的服务器，为服务注册中心，
而系统中其它微服务使用eureka的客户端进行连接到eureka-server上心跳连接并告知还运行中。
如此，维护人员能够通过eureka-server监控系统中其它微服务是否正常运行。其它微服务都需要向eureka进行注册，
它们之间的访问，也需要通过对eureka发送请求，eureka再返回相应的地址-->
    <!-- 模块名及描述信息 -->
    <name>ad-eureka</name>
    <description>Spring Cloud Eureka</description>

    <!-- eureka server: 提供服务发现与服务注册 -->
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
    </dependencies>

    <!--
        SpringBoot的Maven插件, 能够以Maven的方式为应用提供SpringBoot的支持，可以将
        SpringBoot应用打包为可执行的jar或war文件, 然后以通常的方式运行SpringBoot应用
     -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>